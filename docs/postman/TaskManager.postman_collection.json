{
  "info": {
    "_postman_id": "f2d71e57-5c84-4bcf-a9d9-23d4b3a5d3b2",
    "name": "Task Manager API",
    "description": "A collection for the Task Manager application API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "register"]
            },
            "description": "Register a new user in the system"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData && jsonData.token) {",
                  "    pm.environment.set(\"token\", jsonData.token);",
                  "    console.log(\"Token saved to environment\");",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "login"]
            },
            "description": "Login an existing user"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData && jsonData.token) {",
                  "    pm.environment.set(\"token\", jsonData.token);",
                  "    console.log(\"Token saved to environment\");",
                  "}"
                ]
              }
            }
          ]
        }
      ],
      "description": "Authentication endpoints for user registration and login"
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Complete project\",\n    \"description\": \"Finish the task manager app\",\n    \"status\": \"Todo\",\n    \"dueDate\": \"2025-06-01T00:00:00.000Z\",\n    \"priority\": \"High\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"]
            },
            "description": "Create a new task"
          },
          "response": []
        },
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"],
              "query": [
                {
                  "key": "status",
                  "value": "Todo",
                  "description": "Filter by status (Todo, InProgress, Done)",
                  "disabled": true
                },
                {
                  "key": "priority",
                  "value": "High",
                  "description": "Filter by priority (Low, Medium, High)",
                  "disabled": true
                },
                {
                  "key": "sortBy",
                  "value": "dueDate",
                  "description": "Field to sort by",
                  "disabled": true
                },
                {
                  "key": "order",
                  "value": "asc",
                  "description": "Sort order (asc, desc)",
                  "disabled": true
                }
              ]
            },
            "description": "Get all tasks for the authenticated user with optional filtering and sorting"
          },
          "response": []
        },
        {
          "name": "Get Task By ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "task-id-here",
                  "description": "ID of the task to retrieve"
                }
              ]
            },
            "description": "Get a specific task by its ID"
          },
          "response": []
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated title\",\n    \"description\": \"Updated description\",\n    \"status\": \"InProgress\",\n    \"dueDate\": \"2025-06-15T00:00:00.000Z\",\n    \"priority\": \"Medium\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "task-id-here",
                  "description": "ID of the task to update"
                }
              ]
            },
            "description": "Update an existing task"
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "task-id-here",
                  "description": "ID of the task to delete"
                }
              ]
            },
            "description": "Delete a task by its ID"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing tasks (create, read, update, delete)"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    }
  ]
}
